{"version":3,"sources":["store/actions/actionTypes.js","hoc/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/utility.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","errorCodeMapper","authSuccess","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","pwd","isSignUp","authData","password","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","message","setAuthRedirectPath","path","authCheckState","getItem","updateObject","oldObject","updatedProperies","checkValidlity","value","rules","isValid","required","trim","minLength","length","maxLength","fixedLength","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetRedirectAuthPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","burger","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","loading","burgerBuilder","totalPrice","buildingBurger","building","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignUp","routes","Boolean","window","location","hostname","match","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","reducer","action","updatedIngredient","updatedIngredients","updatedState","purchased","newOrder","userID","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuildereducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.c4540641.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients,   \r\n    };\r\n};\r\n\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    };\r\n};\r\n\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-f0ebd.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        })\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)        \r\n        .then((response) => { \r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n        .catch((error) => { \r\n            dispatch(purchaseBurgerFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOdersFail = (error) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n   \r\n    return dispatch => {\r\n        dispatch(fetchOdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n        .then((res) => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                })\r\n            }\r\n            dispatch(fetchOdersSuccess(fetchedOrders));\r\n        })\r\n        .catch((err) => {\r\n            dispatch(fetchOdersFail(err));\r\n        })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nlet errorCodeMapper = {\r\n    \"EMAIL_NOT_FOUND\": 'Email address not found !',\r\n    \"INVALID_PASSWORD\": 'The entered password is invalid !',\r\n    \"USER_DISABLED\": 'This user is disabled by the administrator !',\r\n    \"EMAIL_EXISTS\": ' The email address is already in use by another account !',\r\n    \"MISSING_PASSWORD\":  'Please provide a password !'\r\n} \r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n  \r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: errorCodeMapper[error.message]\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('burger-token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');  \r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return dispatch => {\r\n    setTimeout(()=> {\r\n        dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n}\r\n\r\nexport const auth = (email, pwd, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: pwd,\r\n            returnSecureToken: true \r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCiRytIPiibe9qZEMF7QI3DHGwpDu2tjUM';\r\n        if(!isSignUp){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCiRytIPiibe9qZEMF7QI3DHGwpDu2tjUM';            \r\n        }\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('burger-token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('burger-token');\r\n        if(!token) {\r\n            dispatch(logout());\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }\r\n            else{\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }\r\n        }\r\n    }\r\n}","export const updateObject = (oldObject, updatedProperies) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperies\r\n    }\r\n}\r\n\r\nexport const checkValidlity = (value, rules) => {\r\n    let isValid = true;\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if(rules.minLength){\r\n        isValid = value.trim().length >= rules.minLength && isValid;\r\n    }\r\n    if(rules.maxLength){\r\n        isValid = value.trim().length <= rules.maxLength && isValid;\r\n    }\r\n    if(rules.fixedLength){\r\n        isValid = value.trim().length === rules.fixedLength && isValid;\r\n    }\r\n    return isValid;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3G85s\",\"BreadTop\":\"BurgerIngredient_BreadTop__GLLdi\",\"Seeds1\":\"BurgerIngredient_Seeds1__2Ul93\",\"Seeds2\":\"BurgerIngredient_Seeds2__1xqDP\",\"Meat\":\"BurgerIngredient_Meat__2TTs7\",\"Cheese\":\"BurgerIngredient_Cheese__DYmbm\",\"Salad\":\"BurgerIngredient_Salad__2VE7y\",\"Bacon\":\"BurgerIngredient_Bacon__PznHb\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-f0ebd.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3RS6I\",\"Open\":\"SideDrawer_Open__2faNy\",\"Close\":\"SideDrawer_Close__2LiH8\",\"Logo\":\"SideDrawer_Logo__2nL0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__CEprI\",\"Label\":\"BuildControl_Label__159o1\",\"Less\":\"BuildControl_Less__XJKGb\",\"More\":\"BuildControl_More__13VgD\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nclass Modal extends Component {\r\n    \r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate(){\r\n       \r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n    \r\n                }}\r\n            >\r\n    \r\n               {this.props.children}\r\n            </div>\r\n        </Aux>\r\n        );\r\n    }\r\n}\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2V7bG\",\"Logo\":\"Toolbar_Logo__1sTcU\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2_psK\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Yjqh\",\"active\":\"NavigationItem_active__1PcBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2_S7o\",\"OrderButton\":\"BuildControls_OrderButton__2H9S9\",\"enable\":\"BuildControls_enable__21Qo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3qBnh\",\"Success\":\"Button_Success__ohX8P\",\"Danger\":\"Button_Danger__B897E\"};","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux';\r\n// import axios from '../../axios-orders';\r\n\r\nconst withErrorHandler  = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n           \r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);          \r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                <Modal show={this.state.error}\r\n                    modalClosed={this.errorConfirmedHandler}\r\n                >\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </Aux>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = ( \r\n                <div className = {classes.BreadTop}>\r\n                    <div className = {classes.Seeds1}></div>\r\n                    <div className = {classes.Seeds2}></div>\r\n                </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;    \r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break; \r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    \r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport classes from './Burger.module.css';\r\n\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n           return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients.</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(burger);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2i8_D\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Ys3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__13y4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__rLG8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3bUWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2TvJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__Dm7Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3xuVV\",\"load1\":\"Spinner_load1__2wJQd\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"Sam's Burger app Logo\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;    ","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    \r\n    <li className={classes.NavigationItem}> \r\n        <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>\r\n                {props.children}\r\n        </NavLink>\r\n    </li>\r\n    \r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ?  <NavigationItem link=\"/orders\">Orders</NavigationItem> : null }\r\n        {!props.isAuthenticated ? \r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem> : \r\n        <NavigationItem link=\"/logout\">Logout</NavigationItem> }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n            \r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />   \r\n                </nav> \r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React,{ Component } from 'react';\r\nimport Aux from '../Aux';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport { connect } from 'react-redux'; \r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n    });\r\n    }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Toolbar \r\n                isAuth={this.props.isAuthenticated}\r\n                drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer \r\n                isAuth={this.props.isAuthenticated}\r\n                open={this.state.showSideDrawer} \r\n                closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.token !== null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}  onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))   \r\n        }\r\n        <button className={classes.OrderButton} disabled={props.purchasable} onClick={props.ordered}>{props.isAuth? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Aux';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary =  Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n        return ( \r\n        <li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>\r\n        );\r\n    });\r\n   return (\r\n       <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients: </p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n       </Aux>\r\n   )\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n    \r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n                .map(igKey => {\r\n                    return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n        }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true})\r\n        }\r\n        else{\r\n            this.props.onSetRedirectAuthPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n    \r\n    purchaseContinueHandler = () => {\r\n        // const queryParams = [];\r\n        // for(let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        // }\r\n        // queryParams.push('price=' + this.props.price);\r\n        // const queryString  = queryParams.join('&');\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n   \r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null\r\n       \r\n        let burger = this.props.error ? <p>Ingredients cant be loaded</p> : <Spinner />\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    purchasable={!this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchaseHandler}\r\n                    isAuth={this.props.isAuthenticated}\r\n                    price={this.props.price} />\r\n                </Aux>\r\n            )\r\n                \r\n            orderSummary =  <OrderSummary \r\n            ingredients={this.props.ings}\r\n            price={this.props.price}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}/>;\r\n        \r\n        }\r\n\r\n        if(this.state.loading) {\r\n            orderSummary = <Spinner />\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                   {orderSummary}\r\n                </Modal>\r\n                    {burger}\r\n            </Aux>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetRedirectAuthPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component  {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render () {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = ( importComponent ) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent()\r\n            .then(cmp => {\r\n                this.setState({component: cmp.default})\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n// import Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n// import Orders from './containers/Orders/Orders';\n// import Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\n// lazy load components and pass to routes.\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n})\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n})\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n})\n\nclass  App extends Component {\n  \n  componentDidMount () {\n    this.props.onTryAutoSignUp();\n  }\n  \n  render () {\n  \n    let routes = ( \n      <Switch>\n          <Route path=\"/auth\" component = {asyncAuth} />\n          <Route path=\"/\" exact component = {BurgerBuilder} />\n          <Redirect to=\"/\" />\n      </Switch>\n     );\n     if(this.props.isAuthenticated){\n      routes = ( \n        <Switch> \n          <Route path=\"/checkout\" component = {asyncCheckout} />\n          <Route path=\"/orders\" component = {asyncOrders} />\n          <Route path=\"/logout\" component = {Logout} />\n          <Route path=\"/auth\" component = {asyncAuth} />\n          <Route path=\"/\" exact component = {BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n       );\n     }\n  return (\n    <div >\n      <Layout>\n        <Switch>\n          {routes}\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !==  null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4, \r\n    meat: 1.3,\r\n    bacon: 0.7    \r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            \r\n            const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n            const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n            return updateObject(state, updatedState);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName],\r\n                building: true\r\n        \r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            };\r\n        \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer; ","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n               purchased: false\r\n            }      \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }      \r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userID: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n} \r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        userID: action.userId,\r\n        error: null,\r\n        loading: false})\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: \r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: \r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: \r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: \r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: \r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuildereducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuildereducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}