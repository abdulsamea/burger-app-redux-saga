{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientsName","push","name","amount","ingredientOutput","map","ig","className","classes","ing","key","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","userID","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"gMA8BeA,EA3BD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAC9BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACzC,OAAO,0BACPC,UACCC,IAAQC,IAETC,IAAKJ,EAAGJ,MAJD,IAISI,EAAGJ,KAJZ,KAIoBI,EAAGH,OAJvB,QAOP,OACI,yBAAKI,UAAWC,IAAQG,OACpB,2CAAiBP,GACjB,qCAAU,uCAAaQ,OAAOC,WAAWf,EAAMgB,MAAMC,QAAQ,KAA7D,O,wCChBNC,E,kLAOAC,KAAKnB,MAAMoB,cAAcD,KAAKnB,MAAMqB,MAAOF,KAAKnB,MAAMsB,U,+BAIpD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIL,KAAKnB,MAAMyB,UACXF,EACIJ,KAAKnB,MAAMuB,OAAOhB,KAAI,SAAAR,GAAK,OAEvB,kBAACc,EAAD,CAAOD,IAAKb,EAAM2B,GACdzB,YAAaF,EAAME,YACnBe,OAAQjB,EAAMiB,YAI1B,6BACKO,O,GAvBII,aA4CNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM9B,MAAMwB,OACpBE,QAASI,EAAM9B,MAAM0B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKC,WAIA,SAAAC,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI/DM,CAA6CM,YAAiBhB,EAAQiB,O,mBCnDrFC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,IAAM","file":"static/js/5.6a0f69ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    \r\n    const ingredients = [];\r\n    for (let ingredientsName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientsName,\r\n            amount: props.ingredients[ingredientsName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n    return <span \r\n    className={\r\n     classes.ing\r\n    }\r\n    key={ig.name}> {ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price.toFixed(2))}</strong> </p>\r\n        </div>\r\n    );\r\n    \r\n    \r\n};\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n    // state = {\r\n    //     orders: [],\r\n    //     loading: true\r\n    // }\r\n\r\n    componentDidMount() {\r\n      this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading){\r\n            orders = \r\n                this.props.orders.map(order => (\r\n                   \r\n                    <Order key={order.id}\r\n                        ingredients={order.ingredients} \r\n                        price={+order.price} />\r\n                ))   \r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userID\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kTvc\",\"ing\":\"Order_ing__3EIcy\"};"],"sourceRoot":""}